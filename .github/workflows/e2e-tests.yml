name: E2E Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      
    - name: Build binary
      run: cargo build --release
      
    - name: Run E2E tests
      run: cargo test --test e2e
      env:
        CARGO_BIN_EXE_py-license-auditor: ./target/release/py-license-auditor
        
    - name: Run manual E2E scenarios
      run: |
        # Test basic workflow
        cd /tmp
        uv init e2e-test-project
        cd e2e-test-project
        uv add requests click
        
        # Test license extraction with check subcommand
        ${{ github.workspace }}/target/release/py-license-auditor check --format json
        
        # Test policy setup with init subcommand
        ${{ github.workspace }}/target/release/py-license-auditor init green
        
        # Test policy checking (expect violations with green policy)
        set +e
        ${{ github.workspace }}/target/release/py-license-auditor check
        exit_code=$?
        if [ $exit_code -eq 1 ]; then
          echo "✅ Policy violations detected as expected (exit code 1)"
        else
          echo "❌ Unexpected exit code: $exit_code"
          exit 1
        fi
        
        # Test fix subcommand
        ${{ github.workspace }}/target/release/py-license-auditor fix --dry-run
        
        # Test config subcommand
        ${{ github.workspace }}/target/release/py-license-auditor config --validate
